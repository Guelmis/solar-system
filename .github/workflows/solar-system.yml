name: Solar System Workflow
on: 
    workflow_dispatch:
    push:
        branches:
            - main
            - 'feature/*'
env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }} 

jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            
            - name: Setup NodeJS Version - 18
              uses: actions/setup-node@v3
              with:
               node-version: 18

            - name: Cache NPM dependencies
              uses: actions/cache@v3
              with:
                path: node_modules # Directory where the dependencies are generally added
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}   
            
            - name: Install dependencies
              run: npm install
              
            - name: Unit testing
              run: npm test
              id: unit_testing

            - name: Archive Test Result
              if: failure() && steps.unit_testing.outcome == 'failure' || steps.unit_testing.outcome == 'success'
              uses: actions/upload-artifact@v3
              with:
                name: Mocha-Test-Result
                path: ./test-results.xml   

    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
                            
            - name: Setup NodeJS Version - 18
              uses: actions/setup-node@v3
              with:
                node-version: 18

            - name: Cache NPM dependencies
              uses: actions/cache@v3
              with:
                path: node_modules # Directory where the dependencies are generally added
                key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }} 

            - name: Install dependencies
              run: npm install
                              
            - name: Code Coverage
              continue-on-error: true
              run: npm run coverage
                
            - name: Archive Test Result
              uses: actions/upload-artifact@v3
              with:
                name: Code-Coverage-Result
                path: ./coverage
                retention-days: 5   

    docker:
        name: Containerization
        needs: [code-coverage, unit-testing]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
                            
            - name: DockerHub Logins
              uses: docker/login-action@v2.2.0
              with:
                  username:  ${{  vars.DOCKER_USERNAME }}
                  password:  ${{ secrets.DOCKER_PASSWORD }} 
            
            - name: Docker Build For Testing
              uses: docker/build-push-action@v4
              with:
                context: .
                push:  false
                tags:  ${{ vars.DOCKER_USERNAME }}/solar-system:${{  github.sha }}   
                
            - name: Docker Image Test
              run: |
               docker images
               docker run --name solar-sytem-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAMER \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
               
               export IP=$(docker inspect -f '{{ range .NetworkSettings.Networks }}{{ .IPAddress }}{{ end }}'  solar-system-app)
               echo $IP

               echo Testing Image URL using wget
               wget -q -O - 127.0.0.1:3000/live | grep live              

              



