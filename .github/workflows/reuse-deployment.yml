name: Deployment - Reusable Workflow

on:
    workflow_call:
        inputs:
            mongodb-uri:
               required: true
               type: string
            kubectl-version:
                description: Provide the required kubectl version
                default: v1.26.0
                required: false
                type: string
            k8s-manifest-dir:
                description: Directory containing Kubernetes manifests files
                default: kubernetes/
                required: true
                type: string
            environment:
                description: Provide the Deployment Environment
                default: dev
                required: true
                type: string            

        secrets:
            k8s-kubeconfig:
                required: true
            mongodb-password:
                required: true
                
        outputs:
         application-url: 
            value: ${{ jobs.reuse-deploy.outputs.APP_INGRESS_URL }}        


jobs:
    reuse-deploy:
        environment: 
            name: $ {{ inputs.environment }}
            url: https://${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }}
        outputs:
           APP_INGRESS_URL: ${{ steps.set-ingress-host-address.outputs.APP_INGRESS_HOST }} 
        runs-on: ubuntu-latest
        steps:

            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Install kubectl cli
              uses: azure/setup-kubectl@v3
              with:
                version: ${{  inputs.kubectl-version }}
            
            - name: Adding kubeconfig
              uses: azure/k8s-set-context:v3
              with:
                method: kubeconfig
                kubeconfig: ${{ secrets.k8s-kubeconfig.KUBECONFIG }}  
            
            
            - name: Fetch K8s Cluster Details
              run: |
                kubectl version --short
                echo ----------------------------------------------
                kubectl get nodes
            
            - name: Get Nginx Controller IP as Github Env Variable
              run: |
                  echo "INGRESS_IP=$(kubectl -n ingress-nginx get svc ingress-nginx-controller -o jsonpath="{.status.loadbalancer.ingress[0].ip}")" >> $GITHUB_ENV    
                
            - name:   Replace Token in Manifest files
              uses: cschleiden/replace-tokens@v1
              with:
                  tokenPrefix: '_{_'  #D depends what you declare in your file as the Prefix and Suffix
                  tokenSuffix: '_}_'
                  files: '["${{ inputs.k8s-manifest-dir }}*.yaml"]' # Location where the manifests are
              env:
                NAMESPACE: ${{ vars.NAMESPACE }}
                REPLICAS: ${{ vars.REPLICAS }}
                IMAGE: ${{ vars.DOCKER_USERNAME }}/solar-system:${{ github.sha }}
                INGRESS_IP:  ${{ env.INGRESS_IP }}          

            - name: Checking Variables replacement
              run: | 
                cat ${{ inputs.k8s-manifest-dir }}*.yaml    

            - name: Create MongoDB Secret
              run: |
                 kubectl -n ${{ vars.NAMESPACE}} create secret generic mongo-db-creds \
                  --from-literal=MONGO_URI=${{ inputs.mongodb-uri }} \
                  --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
                  --from-literal=MONGO_PASSWORD=${{ secrets.mongodb-password.MONGO_PASSWORD }} \    
                  --save-config \
                  --dry-run=client \
                  -o yaml | kubectl apply -f -

            - name: Deploy to dev env
              run: |
                kubectl apply -f ${{ inputs.k8s-manifest-dir }}

            - name: Set App Ingress Host URL
              id: set-ingress-host-address
              run: |
                echo "APP_INGRESS_HOST=$(kubectl -n${{ vars.NAMESPACE }} get ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")"  >> "$GITHUB_OUTPUT"        